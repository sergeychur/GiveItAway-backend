version: "3.4"

networks:
  uniting_net:


services:
  db:
    build:
      context: .
      dockerfile: deploy/db.Dockerfile
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - uniting_net
    volumes:
      - ./db_data:/var/lib/postgresql/data

  auth:
    build:
      context: .
      dockerfile: deploy/auth.Dockerfile
      target: release
    ports:
      - 8092:8092
    restart: always
    networks:
      - uniting_net
    depends_on:
      - db
    command:
      /bin/bash -c "/home/app/auth.out /home/app/config_deploy.json"

  api:
    build:
      context: .
      dockerfile: deploy/api.Dockerfile
      target: release
    ports:
      - 8091:8091
    expose:
      - 8091
    restart: always
    networks:
      - uniting_net
    depends_on:
      - db
      - auth
    command:
      /bin/bash -c "/home/app/wait_for_it.sh -t 600 db:5432 && /home/app/wait_for_it.sh -t 600 auth:8092 && /home/app/api.out /home/app/config_deploy.json"
    volumes:
      - ./upload:/home/app/upload

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    networks:
      - uniting_net
    depends_on:
      - api
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  centrifugal:
    image: centrifugo/centrifugo
    restart: unless-stopped
    networks:
      - uniting_net
    command: centrifugo -c /centrifuge/centrifugo_config.json
    volumes: 
      - ./config:/centrifuge/
    ports:
      - "8000:8000"
    expose:
      - 8000

